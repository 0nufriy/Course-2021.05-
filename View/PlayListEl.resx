<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>